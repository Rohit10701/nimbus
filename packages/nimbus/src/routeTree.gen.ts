/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TestTestIdImport } from './routes/test.$testId'
import { Route as homeLayoutImport } from './routes/(home)/_layout'
import { Route as homeLayoutIndexImport } from './routes/(home)/_layout/index'

// Create Virtual Routes

const homeImport = createFileRoute('/(home)')()

// Create/Update Routes

const homeRoute = homeImport.update({
  id: '/(home)',
  getParentRoute: () => rootRoute,
} as any)

const TestTestIdRoute = TestTestIdImport.update({
  id: '/test/$testId',
  path: '/test/$testId',
  getParentRoute: () => rootRoute,
} as any)

const homeLayoutRoute = homeLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => homeRoute,
} as any)

const homeLayoutIndexRoute = homeLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => homeLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(home)': {
      id: '/(home)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof homeImport
      parentRoute: typeof rootRoute
    }
    '/(home)/_layout': {
      id: '/(home)/_layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof homeLayoutImport
      parentRoute: typeof homeRoute
    }
    '/test/$testId': {
      id: '/test/$testId'
      path: '/test/$testId'
      fullPath: '/test/$testId'
      preLoaderRoute: typeof TestTestIdImport
      parentRoute: typeof rootRoute
    }
    '/(home)/_layout/': {
      id: '/(home)/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof homeLayoutIndexImport
      parentRoute: typeof homeLayoutImport
    }
  }
}

// Create and export the route tree

interface homeLayoutRouteChildren {
  homeLayoutIndexRoute: typeof homeLayoutIndexRoute
}

const homeLayoutRouteChildren: homeLayoutRouteChildren = {
  homeLayoutIndexRoute: homeLayoutIndexRoute,
}

const homeLayoutRouteWithChildren = homeLayoutRoute._addFileChildren(
  homeLayoutRouteChildren,
)

interface homeRouteChildren {
  homeLayoutRoute: typeof homeLayoutRouteWithChildren
}

const homeRouteChildren: homeRouteChildren = {
  homeLayoutRoute: homeLayoutRouteWithChildren,
}

const homeRouteWithChildren = homeRoute._addFileChildren(homeRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof homeLayoutIndexRoute
  '/test/$testId': typeof TestTestIdRoute
}

export interface FileRoutesByTo {
  '/test/$testId': typeof TestTestIdRoute
  '/': typeof homeLayoutIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(home)': typeof homeRouteWithChildren
  '/(home)/_layout': typeof homeLayoutRouteWithChildren
  '/test/$testId': typeof TestTestIdRoute
  '/(home)/_layout/': typeof homeLayoutIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/test/$testId'
  fileRoutesByTo: FileRoutesByTo
  to: '/test/$testId' | '/'
  id:
    | '__root__'
    | '/(home)'
    | '/(home)/_layout'
    | '/test/$testId'
    | '/(home)/_layout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  homeRoute: typeof homeRouteWithChildren
  TestTestIdRoute: typeof TestTestIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  homeRoute: homeRouteWithChildren,
  TestTestIdRoute: TestTestIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(home)",
        "/test/$testId"
      ]
    },
    "/(home)": {
      "filePath": "(home)",
      "children": [
        "/(home)/_layout"
      ]
    },
    "/(home)/_layout": {
      "filePath": "(home)/_layout.tsx",
      "parent": "/(home)",
      "children": [
        "/(home)/_layout/"
      ]
    },
    "/test/$testId": {
      "filePath": "test.$testId.tsx"
    },
    "/(home)/_layout/": {
      "filePath": "(home)/_layout/index.tsx",
      "parent": "/(home)/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
